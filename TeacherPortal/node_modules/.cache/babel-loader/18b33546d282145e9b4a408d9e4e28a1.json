{"ast":null,"code":"export const checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  if (response.status === 500) {\n    return response.json().then(errorData => {\n      const message = (errorData || {}).error;\n      const error = new TypeError(message || 'Server error');\n      return error;\n    });\n  }\n\n  if (response.status === 401) {\n    const error = {\n      status: response.status,\n      message: 'Unathorized'\n    };\n    return error;\n  }\n\n  return response.json().then(errorData => {\n    const error = {\n      status: response.status,\n      message: errorData\n    };\n    return error;\n  });\n};\nexport const parseJSON = response => {\n  if (response.status === 204 || response.status === 205) {\n    return {};\n  }\n\n  if (response.status === 401 || response.status === 500) {\n    return response;\n  }\n\n  if (response.headers) {\n    const contentType = response.headers.get('content-type');\n\n    if (contentType && contentType.indexOf('application/json') !== -1) {\n      return response.json();\n    }\n  }\n\n  return {};\n};","map":{"version":3,"sources":["/Users/khali/Documents/git/TeacherPortal/src/redux/responseHandler.js"],"names":["checkStatus","response","status","json","then","errorData","message","error","TypeError","parseJSON","headers","contentType","get","indexOf"],"mappings":"AAEA,OAAO,MAAMA,WAAW,GAAIC,QAAD,IAAsB;AAC/C,MAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOD,QAAP;AACD;;AACD,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOD,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAqBC,SAAS,IAAI;AACvC,YAAMC,OAAO,GAAG,CAACD,SAAS,IAAI,EAAd,EAAkBE,KAAlC;AACA,YAAMA,KAAK,GAAG,IAAIC,SAAJ,CAAcF,OAAO,IAAI,cAAzB,CAAd;AACA,aAAOC,KAAP;AACD,KAJM,CAAP;AAKD;;AACD,MAAIN,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMK,KAAK,GAAG;AACZL,MAAAA,MAAM,EAAED,QAAQ,CAACC,MADL;AAEZI,MAAAA,OAAO,EAAE;AAFG,KAAd;AAIA,WAAOC,KAAP;AACD;;AACD,SAAON,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAqBC,SAAS,IAAI;AACvC,UAAME,KAAK,GAAG;AACZL,MAAAA,MAAM,EAAED,QAAQ,CAACC,MADL;AAEZI,MAAAA,OAAO,EAAED;AAFG,KAAd;AAIA,WAAOE,KAAP;AACD,GANM,CAAP;AAOD,CAzBM;AA2BP,OAAO,MAAME,SAAS,GAAIR,QAAD,IAAsB;AAC7C,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;AACtD,WAAO,EAAP;AACD;;AACD,MAAID,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;AACtD,WAAOD,QAAP;AACD;;AACD,MAAIA,QAAQ,CAACS,OAAb,EAAsB;AACpB,UAAMC,WAAW,GAAGV,QAAQ,CAACS,OAAT,CAAiBE,GAAjB,CAAqB,cAArB,CAApB;;AACA,QAAID,WAAW,IAAIA,WAAW,CAACE,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAhE,EAAmE;AACjE,aAAOZ,QAAQ,CAACE,IAAT,EAAP;AACD;AACF;;AACD,SAAO,EAAP;AACD,CAdM","sourcesContent":["// @flow\r\n\r\nexport const checkStatus = (response: Object) => {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n  if (response.status === 500) {\r\n    return response.json().then(errorData => {\r\n      const message = (errorData || {}).error;\r\n      const error = new TypeError(message || 'Server error');\r\n      return error;\r\n    });\r\n  }\r\n  if (response.status === 401) {\r\n    const error = {\r\n      status: response.status,\r\n      message: 'Unathorized'\r\n    };\r\n    return error;\r\n  }\r\n  return response.json().then(errorData => {\r\n    const error = {\r\n      status: response.status,\r\n      message: errorData\r\n    };\r\n    return error;\r\n  });\r\n};\r\n\r\nexport const parseJSON = (response: Object) => {\r\n  if (response.status === 204 || response.status === 205) {\r\n    return {};\r\n  }\r\n  if (response.status === 401 || response.status === 500) {\r\n    return response;\r\n  }\r\n  if (response.headers) {\r\n    const contentType = response.headers.get('content-type');\r\n    if (contentType && contentType.indexOf('application/json') !== -1) {\r\n      return response.json();\r\n    }\r\n  }\r\n  return {};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}