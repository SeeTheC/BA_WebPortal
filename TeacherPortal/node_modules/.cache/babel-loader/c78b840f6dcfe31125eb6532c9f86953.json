{"ast":null,"code":"import { put, takeLatest, call } from 'redux-saga/effects';\nimport ApiCaller from '../ApiCaller';\n\nconst apiData = payload => {\n  return ApiCaller('/api/v1/auth', 'post', payload).then(response => response);\n};\n\nexport default function* login() {\n  yield takeLatest('LOGIN', function* operateData(action) {\n    yield put({\n      type: 'LOGIN_STARTED'\n    });\n\n    try {\n      const DATA = yield call(apiData.bind(this, action.payload));\n      yield put({\n        type: 'LOGIN_SUCCESS',\n        payload: DATA\n      });\n    } catch (error) {\n      yield put({\n        type: 'LOGIN_FAILED'\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/khali/Documents/git/TeacherPortal/src/redux/saga/login.js"],"names":["put","takeLatest","call","ApiCaller","apiData","payload","then","response","login","operateData","action","type","DATA","bind","error"],"mappings":"AACA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,QAAsC,oBAAtC;AAEA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,IAAI;AACzB,SAAOF,SAAS,CAAC,cAAD,EAAiB,MAAjB,EAAyBE,OAAzB,CAAT,CAA2CC,IAA3C,CAAgDC,QAAQ,IAAIA,QAA5D,CAAP;AACD,CAFD;;AAIA,eAAe,UAAUC,KAAV,GAAwB;AACrC,QAAMP,UAAU,CAAC,OAAD,EAAU,UAAUQ,WAAV,CAAsBC,MAAtB,EAA8B;AACtD,UAAMV,GAAG,CAAC;AAAEW,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAT;;AACA,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMV,IAAI,CAACE,OAAO,CAACS,IAAR,CAAa,IAAb,EAAmBH,MAAM,CAACL,OAA1B,CAAD,CAAvB;AACA,YAAML,GAAG,CAAC;AAAEW,QAAAA,IAAI,EAAE,eAAR;AAAyBN,QAAAA,OAAO,EAAEO;AAAlC,OAAD,CAAT;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACd,YAAMd,GAAG,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAT;AACD;AACF,GARe,CAAhB;AASD","sourcesContent":["// @flow\r\nimport { put, takeLatest, call } from 'redux-saga/effects';\r\nimport type { Saga } from 'redux-saga';\r\nimport ApiCaller from '../ApiCaller';\r\n\r\nconst apiData = payload => {\r\n  return ApiCaller('/api/v1/auth', 'post', payload).then(response => response);\r\n};\r\n\r\nexport default function* login(): Saga {\r\n  yield takeLatest('LOGIN', function* operateData(action) {\r\n    yield put({ type: 'LOGIN_STARTED' });\r\n    try {\r\n      const DATA = yield call(apiData.bind(this, action.payload));\r\n      yield put({ type: 'LOGIN_SUCCESS', payload: DATA });\r\n    } catch (error) {\r\n      yield put({ type: 'LOGIN_FAILED' });\r\n    }\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}