{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport reducer from './reducers';\nimport rootSaga from './saga';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: []\n};\nconst persistedReducer = persistReducer(persistConfig, reducer);\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(persistedReducer, applyMiddleware(...middlewares, sagaMiddleware));\nconst persistor = persistStore(store);\nsagaMiddleware.run(rootSaga); // const action = type => store.dispatch({ type });\n\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/khali/Documents/git/TeacherPortal/src/redux/Store.js"],"names":["applyMiddleware","createStore","persistStore","persistReducer","storage","createSagaMiddleware","logger","reducer","rootSaga","persistConfig","key","blacklist","persistedReducer","middlewares","process","env","NODE_ENV","push","sagaMiddleware","store","persistor","run"],"mappings":"AACA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE;AAHS,CAAtB;AAOA,MAAMC,gBAAgB,GAAGT,cAAc,CAACM,aAAD,EAAgBF,OAAhB,CAAvC;AAEA,MAAMM,WAAW,GAAG,EAApB;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACD;;AACD,MAAMY,cAAc,GAAGb,oBAAoB,EAA3C;AAEA,MAAMc,KAAK,GAAGlB,WAAW,CACvBW,gBADuB,EAEvBZ,eAAe,CAAC,GAAGa,WAAJ,EAAiBK,cAAjB,CAFQ,CAAzB;AAKA,MAAME,SAAS,GAAGlB,YAAY,CAACiB,KAAD,CAA9B;AAEAD,cAAc,CAACG,GAAf,CAAmBb,QAAnB,E,CACA;;AAEA,eAAe;AAAEW,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["// @flow\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger';\r\n\r\nimport reducer from './reducers';\r\nimport rootSaga from './saga';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: [\r\n  ]\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nconst middlewares = [];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(...middlewares, sagaMiddleware)\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n// const action = type => store.dispatch({ type });\r\n\r\nexport default { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}