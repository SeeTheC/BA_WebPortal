{"ast":null,"code":"import fetch from \"cross-fetch\";\nimport { checkStatus, parseJSON } from \"./responseHandler\";\n\nconst queryString = require(\"query-string\");\n\nconst headerData = {\n  \"content-type\": \"application/x-www-form-urlencoded\"\n};\n\nconst BodyConversion = (body, header) => {\n  if (header[\"content-type\"] === \"application/x-www-form-urlencoded\") {\n    return queryString.stringify(body);\n  }\n\n  if (header[\"content-type\"] === \"application/json\") {\n    return JSON.stringify(body);\n  }\n\n  return body;\n};\n\n_c = BodyConversion;\nconst API = \"http://localhost:8011\";\nexport default ((endpoint, method, body, header = headerData, hostName = \"http://localhost:8011\") => fetch(`${API}${endpoint}`, {\n  headers: header,\n  method,\n  body: BodyConversion(body, header)\n}).then(checkStatus).then(parseJSON).catch(error => {\n  return {\n    status: false,\n    message: \"Ooops network error! Check your net connection\"\n  };\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyConversion\");","map":{"version":3,"sources":["/Users/khali/Documents/git/TeacherPortal/src/redux/ApiCaller.js"],"names":["fetch","checkStatus","parseJSON","queryString","require","headerData","BodyConversion","body","header","stringify","JSON","API","endpoint","method","hostName","headers","then","catch","error","status","message"],"mappings":"AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,mBAAvC;;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAMC,UAAU,GAAG;AACjB,kBAAgB;AADC,CAAnB;;AAIA,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAeC,MAAf,KAAkC;AACvD,MAAIA,MAAM,CAAC,cAAD,CAAN,KAA2B,mCAA/B,EAAoE;AAClE,WAAOL,WAAW,CAACM,SAAZ,CAAsBF,IAAtB,CAAP;AACD;;AACD,MAAIC,MAAM,CAAC,cAAD,CAAN,KAA2B,kBAA/B,EAAmD;AACjD,WAAOE,IAAI,CAACD,SAAL,CAAeF,IAAf,CAAP;AACD;;AACD,SAAOA,IAAP;AACD,CARD;;KAAMD,c;AAUN,MAAMK,GAAG,GAAG,uBAAZ;AAEA,gBAAe,CACbC,QADa,EAEbC,MAFa,EAGbN,IAHa,EAIbC,MAAc,GAAGH,UAJJ,EAKbS,QAAgB,GAAG,uBALN,KAObd,KAAK,CAAE,GAAEW,GAAI,GAAEC,QAAS,EAAnB,EAAsB;AACzBG,EAAAA,OAAO,EAAEP,MADgB;AAEzBK,EAAAA,MAFyB;AAGzBN,EAAAA,IAAI,EAAED,cAAc,CAACC,IAAD,EAAOC,MAAP;AAHK,CAAtB,CAAL,CAKGQ,IALH,CAKQf,WALR,EAMGe,IANH,CAMQd,SANR,EAOGe,KAPH,CAOUC,KAAD,IAAW;AAChB,SAAO;AACLC,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAZH,CAPF","sourcesContent":["// @flow\r\nimport fetch from \"cross-fetch\";\r\nimport { checkStatus, parseJSON } from \"./responseHandler\";\r\n\r\nconst queryString = require(\"query-string\");\r\n\r\nconst headerData = {\r\n  \"content-type\": \"application/x-www-form-urlencoded\",\r\n};\r\n\r\nconst BodyConversion = (body: Object, header: Object) => {\r\n  if (header[\"content-type\"] === \"application/x-www-form-urlencoded\") {\r\n    return queryString.stringify(body);\r\n  }\r\n  if (header[\"content-type\"] === \"application/json\") {\r\n    return JSON.stringify(body);\r\n  }\r\n  return body;\r\n};\r\n\r\nconst API = \"http://localhost:8011\";\r\n\r\nexport default (\r\n  endpoint: string,\r\n  method: string,\r\n  body: Object,\r\n  header: Object = headerData,\r\n  hostName: string = \"http://localhost:8011\"\r\n) =>\r\n  fetch(`${API}${endpoint}`, {\r\n    headers: header,\r\n    method,\r\n    body: BodyConversion(body, header),\r\n  })\r\n    .then(checkStatus)\r\n    .then(parseJSON)\r\n    .catch((error) => {\r\n      return {\r\n        status: false,\r\n        message: \"Ooops network error! Check your net connection\",\r\n      };\r\n    });\r\n"]},"metadata":{},"sourceType":"module"}