[{"/Users/khali/Documents/git/TeacherPortal/src/index.js":"1","/Users/khali/Documents/git/TeacherPortal/src/reportWebVitals.js":"2","/Users/khali/Documents/git/TeacherPortal/src/routes.js":"3","/Users/khali/Documents/git/TeacherPortal/src/serviceWorker.js":"4","/Users/khali/Documents/git/TeacherPortal/src/redux/Store.js":"5","/Users/khali/Documents/git/TeacherPortal/src/containers/Login.js":"6","/Users/khali/Documents/git/TeacherPortal/src/containers/Master.js":"7","/Users/khali/Documents/git/TeacherPortal/src/common/utils.js":"8","/Users/khali/Documents/git/TeacherPortal/src/redux/reducers/index.js":"9","/Users/khali/Documents/git/TeacherPortal/src/redux/saga/index.js":"10","/Users/khali/Documents/git/TeacherPortal/src/containers/Header.js":"11","/Users/khali/Documents/git/TeacherPortal/src/containers/Users.js":"12","/Users/khali/Documents/git/TeacherPortal/src/containers/Sidebar.js":"13","/Users/khali/Documents/git/TeacherPortal/src/containers/Dashboard.js":"14","/Users/khali/Documents/git/TeacherPortal/src/common/types.js":"15","/Users/khali/Documents/git/TeacherPortal/src/redux/reducers/login.js":"16","/Users/khali/Documents/git/TeacherPortal/src/redux/saga/login.js":"17","/Users/khali/Documents/git/TeacherPortal/src/redux/ApiCaller.js":"18","/Users/khali/Documents/git/TeacherPortal/src/redux/responseHandler.js":"19"},{"size":939,"mtime":1618509290000,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1618509290000,"results":"22","hashOfConfig":"21"},{"size":1594,"mtime":1618509290000,"results":"23","hashOfConfig":"21"},{"size":5154,"mtime":1618509290000,"results":"24","hashOfConfig":"21"},{"size":907,"mtime":1618509290000,"results":"25","hashOfConfig":"21"},{"size":4913,"mtime":1624175200000,"results":"26","hashOfConfig":"21"},{"size":708,"mtime":1624175564000,"results":"27","hashOfConfig":"21"},{"size":18167,"mtime":1618509290000,"results":"28","hashOfConfig":"21"},{"size":134,"mtime":1624172584000,"results":"29","hashOfConfig":"21"},{"size":184,"mtime":1624172750000,"results":"30","hashOfConfig":"21"},{"size":2716,"mtime":1624177100000,"results":"31","hashOfConfig":"21"},{"size":11946,"mtime":1618509290000,"results":"32","hashOfConfig":"21"},{"size":2251,"mtime":1624175856000,"results":"33","hashOfConfig":"21"},{"size":5474,"mtime":1624177074000,"results":"34","hashOfConfig":"21"},{"size":546,"mtime":1618509290000,"results":"35","hashOfConfig":"21"},{"size":339,"mtime":1618509290000,"results":"36","hashOfConfig":"21"},{"size":639,"mtime":1624182398322,"results":"37","hashOfConfig":"21"},{"size":1046,"mtime":1624174238000,"results":"38","hashOfConfig":"21"},{"size":1136,"mtime":1618509290000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"1wm8mfe",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/khali/Documents/git/TeacherPortal/src/index.js",["87"],"// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './redux/Store';\r\nimport Routes from './routes';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={Store.store}>\r\n    <PersistGate loading={null} persistor={Store.persistor}>\r\n      <Routes />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\nserviceWorker.unregister();","/Users/khali/Documents/git/TeacherPortal/src/reportWebVitals.js",[],"/Users/khali/Documents/git/TeacherPortal/src/routes.js",[],"/Users/khali/Documents/git/TeacherPortal/src/serviceWorker.js",[],"/Users/khali/Documents/git/TeacherPortal/src/redux/Store.js",["88"],"// @flow\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger';\r\n\r\nimport reducer from './reducers';\r\nimport rootSaga from './saga';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: [\r\n  ]\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nconst middlewares = [];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(...middlewares, sagaMiddleware)\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n// const action = type => store.dispatch({ type });\r\n\r\nexport default { store, persistor };\r\n","/Users/khali/Documents/git/TeacherPortal/src/containers/Login.js",["89","90","91","92","93","94","95"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport CommonHelper from '../common/utils';\r\nimport logo from \"../../src/logo.svg\";\r\n\r\nconst Helper = new CommonHelper();\r\n\r\nclass Login extends React.Component {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  async componentWillReceiveProps(nextprops: Props) {\r\n    const { loginResult } = nextprops;\r\n    const { fakeAuth, history } = this.props;\r\n    const { props } = this;\r\n    if (loginResult !== props.loginResult) {\r\n      const {status, message} = loginResult;\r\n      if(status === 200)\r\n      {\r\n        Helper.login(history, fakeAuth, loginResult);\r\n      }\r\n      else if(status === false)\r\n      {\r\n        alert(\"Not Valid User\");\r\n        this.setState({username: '', password: ''});\r\n      }\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    const { dispatch } = this.props;\r\n    const { username, password } = this.state;\r\n    if (username && password) {\r\n      dispatch({\r\n        type: \"LOGIN\",\r\n        payload: { \"username\": username, \"password\": password },\r\n      });\r\n      return;\r\n    }\r\n    if (password) {\r\n      alert(\"Username not provided!\");\r\n      return;\r\n    }\r\n    if (username) {\r\n      alert(\"Password not provided!\");\r\n      return;\r\n    }\r\n    alert(\"Username and Password not provided!\");\r\n  };\r\n\r\n  handleState = (key, e) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    return (\r\n      <div className=\"main-content\">\r\n        <div className=\"header bg-gradient-primary py-7 py-lg-8 pt-lg-9\" />\r\n        <div className=\"container mt--8 pb-5\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-5 col-md-7\">\r\n              <div className=\"card bg-secondary border-0 mb-0\">\r\n                <div className=\"card-header bg-transparent text-center\">\r\n                  <img src={logo}\r\n                    style={{ height: 65 }}\r\n                  />\r\n                </div>\r\n                <div className=\"card-body px-lg-5 py-lg-5\">\r\n                  <div className=\"text-center text-muted mb-4\">\r\n                    <small>Sign in with credentials</small>\r\n                  </div>\r\n                  <form role=\"form\">\r\n                    <div className=\"form-group mb-3\">\r\n                      <div className=\"input-group input-group-merge input-group-alternative\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <span className=\"input-group-text\">\r\n                            <i className=\"ni ni-email-83\" />\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          placeholder=\"Username\"\r\n                          type=\"username\"\r\n                          value={username}\r\n                          onChange={e => this.handleState('username',e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <div className=\"input-group input-group-merge input-group-alternative\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <span className=\"input-group-text\">\r\n                            <i className=\"ni ni-lock-circle-open\" />\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                          type=\"password\"\r\n                          value={password}\r\n                          onChange={e => this.handleState('password',e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row align-middle\">\r\n                      <div className=\"col text-center\">\r\n                        {/* <Link to=\"dashboard\"> */}\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary my-4\"\r\n                          onClick={() => {\r\n                            this.login();\r\n                          }}\r\n                        >\r\n                          Sign in\r\n                        </button>\r\n                        {/* </Link> */}\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  loginResult: state.login.result,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","/Users/khali/Documents/git/TeacherPortal/src/containers/Master.js",[],"/Users/khali/Documents/git/TeacherPortal/src/common/utils.js",["96","97"],"// @flow\r\n// export re-usable methods\r\nimport moment from 'moment';\r\nimport { authProp, USER } from './types';\r\n\r\nclass CommonHelper {\r\n  GoogleApiKey = 'AIzaSyD1HLEvbzZQQrcQ-sXPHQjyXuCXNek1vKs';\r\n\r\n  login = async (history: Object, fakeAuth: authProp, data: USER) => {\r\n    if (fakeAuth) {\r\n      await localStorage.setItem('loggedInUserData', JSON.stringify(data));\r\n      fakeAuth.authenticate(() => {\r\n        history.push('/dashboard');\r\n      });\r\n    } else history.push('/login');\r\n  };\r\n\r\n  logout = async (history: Object, fakeAuth: authProp) => {\r\n    await localStorage.removeItem('loggedInUserData');\r\n    if (history && fakeAuth) {\r\n      fakeAuth.signout(() => {\r\n        history.push('/');\r\n      });\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  getLoggedInUserData = () => {\r\n    const data = localStorage.getItem('loggedInUserData');\r\n    if (data) return JSON.parse(data);\r\n    return null;\r\n  };\r\n\r\n  getValidExp = (experiences: any) => {\r\n    return experiences.filter(\r\n      data => data.title && data.joiningDate && data.relievingDate\r\n    );\r\n  };\r\n\r\n  changeDatesFormateDayToYear = (data: Object) => {\r\n    const DATA = data;\r\n    const { dateOfBirth, expiryDate, joiningDate, workExperience } = DATA;\r\n    if (dateOfBirth) {\r\n      DATA.dateOfBirth = moment(dateOfBirth, 'YYYY-MM-DD').format('DD-MM-YYYY');\r\n    }\r\n    if (expiryDate) {\r\n      DATA.expiryDate = moment(expiryDate, 'YYYY-MM-DD').format('DD-MM-YYYY');\r\n    }\r\n    if (joiningDate) {\r\n      DATA.joiningDate = moment(joiningDate, 'YYYY-MM-DD').format('DD-MM-YYYY');\r\n    }\r\n    if (workExperience) {\r\n      workExperience.map((value, i) => {\r\n        if (value.joiningDate) {\r\n          DATA.workExperience[i].joiningDate = moment(\r\n            value.joiningDate,\r\n            'YYYY-MM-DD'\r\n          ).format('DD-MM-YYYY');\r\n        }\r\n        if (value.joiningDate) {\r\n          DATA.workExperience[i].relievingDate = moment(\r\n            value.relievingDate,\r\n            'YYYY-MM-DD'\r\n          ).format('DD-MM-YYYY');\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n    return DATA;\r\n  };\r\n\r\n  changeDatesFormateYearToDate = (data: Object) => {\r\n    const DATA = data;\r\n    const { dateOfBirth, expiryDate, joiningDate, workExperience } = DATA;\r\n    if (dateOfBirth) {\r\n      DATA.dateOfBirth = moment(dateOfBirth, 'DD-MM-YYYY').format('YYYY-MM-DD');\r\n    }\r\n    if (expiryDate) {\r\n      DATA.expiryDate = moment(expiryDate, 'DD-MM-YYYY').format('YYYY-MM-DD');\r\n    }\r\n    if (joiningDate) {\r\n      DATA.joiningDate = moment(joiningDate, 'DD-MM-YYYY').format('YYYY-MM-DD');\r\n    }\r\n    if (workExperience) {\r\n      workExperience.map((value, i) => {\r\n        if (value.joiningDate) {\r\n          DATA.workExperience[i].joiningDate = moment(\r\n            value.joiningDate,\r\n            'DD-MM-YYYY'\r\n          ).format('YYYY-MM-DD');\r\n        }\r\n        if (value.joiningDate) {\r\n          DATA.workExperience[i].relievingDate = moment(\r\n            value.relievingDate,\r\n            'DD-MM-YYYY'\r\n          ).format('YYYY-MM-DD');\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n    return DATA;\r\n  };\r\n\r\n  checkDataLength = (data: Object) => {\r\n    let field = Object.keys(data).map(values => {\r\n      if (\r\n        values !== 'error' &&\r\n        values !== 'success' &&\r\n        values !== 'seats' &&\r\n        data[values] &&\r\n        (typeof data[values] === 'string' ||\r\n          typeof data[values] === 'number') &&\r\n        data[values].toString().length > 40\r\n      ) {\r\n        return values;\r\n      }\r\n      return null;\r\n    });\r\n    field = field.filter(dataValue => dataValue);\r\n    return field.join();\r\n  };\r\n\r\n  validateCharterSearch = (data: Object) => {\r\n    if (data && typeof data === 'object') {\r\n      const {\r\n        sourceId,\r\n        saleFor,\r\n        destinationId,\r\n        hireType,\r\n        adults,\r\n        children,\r\n        vesselType,\r\n        date,\r\n        weight,\r\n        time\r\n      } = data;\r\n      if (!sourceId || !date || !time || !vesselType) {\r\n        return { status: false, error: 'Please fill all required field' };\r\n      }\r\n      if (\r\n        !(\r\n          (saleFor === 'destination' && destinationId) ||\r\n          (saleFor === 'hire' && hireType)\r\n        )\r\n      ) {\r\n        return {\r\n          status: false,\r\n          error: 'Please select either destination or hire type'\r\n        };\r\n      }\r\n      if (vesselType === 'LANDING_CRAFT' || vesselType === 'CARGO_BOAT') {\r\n        if (!this.positiveInteger(weight)) {\r\n          return {\r\n            status: false,\r\n            error: 'Weight should be in positive integer'\r\n          };\r\n        }\r\n      } else if (\r\n        !(children && Number(children)) &&\r\n        !(adults && Number(adults))\r\n      ) {\r\n        return {\r\n          status: false,\r\n          error: 'At least one of adult or children required'\r\n        };\r\n      } else if (\r\n        !this.positiveInteger(children) &&\r\n        !this.positiveInteger(adults)\r\n      ) {\r\n        return {\r\n          status: false,\r\n          error: 'Adult and children should be in positive integer'\r\n        };\r\n      } else if (\r\n        children.toString().includes('.') ||\r\n        adults.toString().includes('.')\r\n      ) {\r\n        return {\r\n          status: false,\r\n          error: 'Adult and children should be in positive integer'\r\n        };\r\n      }\r\n    }\r\n    return { status: true, error: '' };\r\n  };\r\n\r\n  positiveInteger = (data: any) => {\r\n    if (\r\n      !data ||\r\n      !Number(data) ||\r\n      data.toString().includes('.') ||\r\n      !this.validateInteger(data)\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  validateCharterConfirmation = (data: Object) => {\r\n    if (data && typeof data === 'object') {\r\n      const { phoneNumber, name } = data;\r\n      if (!this.validateInteger(phoneNumber)) {\r\n        return { status: false, key: 'Phone number is not valid' };\r\n      }\r\n      if (!this.validateCharacters(name)) {\r\n        return { status: false, key: 'Name is not valid' };\r\n      }\r\n    }\r\n    return { status: true, key: '' };\r\n  };\r\n\r\n  validateTicketingData = (data: Object) => {\r\n    if (data && typeof data === 'object') {\r\n      const {\r\n        children,\r\n        infants,\r\n        adults,\r\n        phoneCode,\r\n        phoneNumber,\r\n        name,\r\n        sourceId,\r\n        destinationId\r\n      } = data;\r\n      if (!sourceId || !destinationId || !phoneCode || !phoneNumber || !name) {\r\n        return { status: false, key: 'Please fill all required field' };\r\n      }\r\n      if (sourceId === destinationId) {\r\n        return { status: false, key: \"Source and destination can't be same\" };\r\n      }\r\n      if (!this.validateInteger(phoneNumber)) {\r\n        return { status: false, key: 'Phone number is not valid' };\r\n      }\r\n      if (\r\n        (infants && infants.toString().includes('.')) ||\r\n        (adults && adults.toString().includes('.')) ||\r\n        (children && children.toString().includes('.'))\r\n      ) {\r\n        return {\r\n          status: false,\r\n          key: 'adult, children, infants can contain only positive number'\r\n        };\r\n      }\r\n      if (\r\n        (Number(infants) && !this.validateInteger(infants)) ||\r\n        (Number(adults) && !this.validateInteger(adults)) ||\r\n        (Number(children) && !this.validateInteger(children))\r\n      ) {\r\n        return {\r\n          status: false,\r\n          key: 'adult, children, infants can contain only positive number'\r\n        };\r\n      }\r\n      if (!(children && Number(children)) && !(adults && Number(adults))) {\r\n        return {\r\n          status: false,\r\n          key: 'At least one of adult or children required'\r\n        };\r\n      }\r\n      if (!this.validateCharacters(name)) {\r\n        return { status: false, key: 'Fullname is not valid' };\r\n      }\r\n    }\r\n    return { status: true, key: '' };\r\n  };\r\n\r\n  validatedata = (data: Object) => {\r\n    if (data && typeof data === 'object') {\r\n      const {\r\n        email,\r\n        phone,\r\n        pinCode,\r\n        fullName,\r\n        name,\r\n        city,\r\n        state,\r\n        topUpCommission,\r\n        ticketingCommission,\r\n        cardCommission,\r\n        goloPayCommission,\r\n        agentSaleCommission,\r\n        medicalLeaves,\r\n        casualLeaves,\r\n        privilegedLeaves,\r\n        workExperience,\r\n        creditLimit,\r\n        bankTransferNumber,\r\n        accountNumber,\r\n        hotelSaleCommission\r\n      } = data;\r\n      if (\r\n        bankTransferNumber &&\r\n        (bankTransferNumber.toString().length > 40 ||\r\n          bankTransferNumber.toString().length < 10)\r\n      ) {\r\n        return {\r\n          status: false,\r\n          key: 'Bank transfer number should contain 10 to 40 characters'\r\n        };\r\n      }\r\n      if (\r\n        accountNumber &&\r\n        (!this.validateInteger(accountNumber) ||\r\n          accountNumber.length > 31 ||\r\n          accountNumber.length < 7)\r\n      ) {\r\n        return {\r\n          status: false,\r\n          key:\r\n            'Account number, A valid account number should contain 7 to 31 positive numbers'\r\n        };\r\n      }\r\n      if (fullName && !this.validateCharacters(fullName)) {\r\n        return { status: false, key: 'FullName' };\r\n      }\r\n      if (name && !this.validateCharacters(name)) {\r\n        return { status: false, key: 'Name' };\r\n      }\r\n      if (email && !this.validateEmail(email)) {\r\n        return { status: false, key: 'Email' };\r\n      }\r\n      if (city && !this.validateCharacters(city)) {\r\n        return { status: false, key: 'City' };\r\n      }\r\n      if (state && !this.validateCharacters(state)) {\r\n        return { status: false, key: 'State' };\r\n      }\r\n      if (\r\n        pinCode &&\r\n        (!this.validateOnlyNumber(pinCode) || pinCode.toString().length !== 6)\r\n      ) {\r\n        return { status: false, key: 'PinCode' };\r\n      }\r\n      if (\r\n        creditLimit &&\r\n        (!this.validateInteger(creditLimit) ||\r\n          creditLimit < 0 ||\r\n          creditLimit > 1000000)\r\n      ) {\r\n        return { status: false, key: 'Credit Limit' };\r\n      }\r\n      if (phone && !this.validateOnlyNumber(phone) || phone.toString().length > 15) {\r\n        return { status: false, key: 'Phone' };\r\n      }\r\n      if (\r\n        medicalLeaves &&\r\n        (!this.validateOnlyNumber(medicalLeaves) || medicalLeaves > 25)\r\n      ) {\r\n        return { status: false, key: 'Medical Leaves' };\r\n      }\r\n      if (\r\n        casualLeaves &&\r\n        (!this.validateOnlyNumber(casualLeaves) || casualLeaves > 25)\r\n      ) {\r\n        return { status: false, key: 'Casual Leaves' };\r\n      }\r\n      if (\r\n        privilegedLeaves &&\r\n        (!this.validateOnlyNumber(privilegedLeaves) || privilegedLeaves > 25)\r\n      ) {\r\n        return { status: false, key: 'Privileged Leaves' };\r\n      }\r\n      if (\r\n        topUpCommission &&\r\n        (!this.validateDecimal(topUpCommission) || topUpCommission > 99)\r\n      ) {\r\n        return { status: false, key: 'topup commission' };\r\n      }\r\n      if (\r\n        ticketingCommission &&\r\n        (!this.validateDecimal(ticketingCommission) || ticketingCommission > 99)\r\n      ) {\r\n        return { status: false, key: 'ticketing commission' };\r\n      }\r\n      if (\r\n        hotelSaleCommission &&\r\n        (!this.validateDecimal(hotelSaleCommission) || hotelSaleCommission > 99)\r\n      ) {\r\n        return { status: false, key: 'hotel sale commission' };\r\n      }\r\n      if (\r\n        cardCommission &&\r\n        (!this.validateDecimal(cardCommission) || cardCommission > 99)\r\n      ) {\r\n        return { status: false, key: 'card commission' };\r\n      }\r\n      if (\r\n        goloPayCommission &&\r\n        (!this.validateDecimal(goloPayCommission) || goloPayCommission > 99)\r\n      ) {\r\n        return { status: false, key: 'golo pay commission' };\r\n      }\r\n      if (\r\n        agentSaleCommission &&\r\n        (!this.validateDecimal(agentSaleCommission) || agentSaleCommission > 99)\r\n      ) {\r\n        return { status: false, key: 'agent sale commission' };\r\n      }\r\n      if (workExperience) {\r\n        const DATA = this.getValidExp(workExperience);\r\n        let status = true;\r\n        DATA.map(value => {\r\n          if (\r\n            status &&\r\n            moment(value.joiningDate, 'YYYY-MM-DD').unix() >\r\n              moment(value.relievingDate, 'YYYY-MM-DD').unix()\r\n          ) {\r\n            status = false;\r\n          }\r\n          return null;\r\n        });\r\n        if (!status) {\r\n          return {\r\n            status: false,\r\n            key:\r\n              'Work Experience, Joining date should be lesser then Releaving Date'\r\n          };\r\n        }\r\n      }\r\n    }\r\n    return { status: true, key: '' };\r\n  };\r\n\r\n  validateEmail = (email: string) => {\r\n    // eslint-disable-next-line no-useless-escape\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  validateMobile = (phone: number) => {\r\n    const re = /^((\\+\\d{1,3}(-| )?\\(?\\d\\)?(-| )?\\d{1,5})|(\\(?\\d{2,6}\\)?))(-| )?(\\d{3,4})(-| )?(\\d{4})(( x| ext)\\d{1,5}){0,1}$/;\r\n    return re.test(String(phone).toLowerCase());\r\n  };\r\n\r\n  validateCharacters = (data: string) => {\r\n    const letters = /^[a-zA-Z ]+$/;\r\n    if (data.match(letters)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateInteger = (data: number) => {\r\n    // if (Number.isNaN(parseInt(data, 10))) {\r\n    //   return false;\r\n    // }\r\n    // return true;\r\n    if (Number.isInteger(parseInt(data, 10))) {\r\n      if (data > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateOnlyNumber = (data: number) => {\r\n    const numberRegex = /^[0-9]*$/;\r\n    if (numberRegex.test(data)) {\r\n      if (data > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateDecimal = (data: string) => {\r\n    const pattern = /^\\d+(\\.\\d{1,2})?$/;\r\n    if (pattern.test(data)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  titleCase = str => {\r\n    if (str) {\r\n      str = str.toLowerCase();\r\n      str = str.charAt(0).toUpperCase() + str.slice(1);\r\n      return str;\r\n    }\r\n    return str;\r\n  };\r\n\r\n  removeUnderscoreMakeTitleCase = str => {\r\n    if (str) {\r\n      str = str.toLowerCase();\r\n      str = str.split('_');\r\n      for (let i = 0; i < str.length; i++) {\r\n        str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\r\n      }\r\n      return str.join(' ');\r\n    }\r\n    return str;\r\n  };\r\n\r\n  breakOnCapital = (value: string) => value.replace(/([A-Z])/g, ' $1').trim();\r\n\r\n  keysInObj: Object = (obj: Object) => Object.keys(obj);\r\n\r\n  joinArrayValues = (dataArray: []) => dataArray.join();\r\n\r\n  validateAddEditImageSubmit = (data, type) => {\r\n    const {\r\n      position,\r\n      selectedImage,\r\n      dashboardImageType,\r\n      description,\r\n      title,\r\n    } = data;\r\n    if(type==='add'){\r\n      if(!position || !selectedImage.length || !dashboardImageType){\r\n        return({isError: true, message: \"Image Type, Position of Image and Image is Required.\"})\r\n      }\r\n      if(title && title.length > 100){\r\n        return({isError: true, message: \"Maximum limit of title is 100 character\"})\r\n      }\r\n      if(description && description.length > 250){\r\n        return({isError: true, message: \"Maximum limit of description is 250 character\"})\r\n      }\r\n      else {\r\n        return({isError: false, message: \"\"})\r\n      }\r\n    }\r\n    else {\r\n      if(!position || !dashboardImageType){\r\n        return({isError: true, message: \"Image Type and Position of Image is Required.\"})\r\n      }\r\n      if(title && title.length > 100){\r\n        return({isError: true, message: \"Maximum limit of title is 100 character\"})\r\n      }\r\n      if(description && description.length > 250){\r\n        return({isError: true, message: \"Maximum limit of description is 250 character\"})\r\n      }\r\n      else {\r\n        return({isError: false, message: \"\"})\r\n      }\r\n    }\r\n};\r\n\r\nvalidateDealForm = (data, type) => {\r\n  const {\r\n    selectedImage,\r\n    description,\r\n    name,\r\n    code,\r\n    dealType,\r\n    dealValue,\r\n  } = data;\r\n\r\n  if(type==='add'){\r\n    if(!dealType){\r\n      return({isError: true, message: \"Deal Type is required\"})\r\n    }\r\n    if(!selectedImage.length){\r\n      return({isError: true, message: \"Image is required\"})\r\n    }\r\n    if(!name){\r\n      return({isError: true, message: \"Name is required\"})\r\n    }\r\n    if(name && name.length > 30){\r\n      return({isError: true, message: \"Deal name length can not have more than 30 character\"})\r\n    }\r\n    if(!dealValue){\r\n      return({isError: true, message: \"Deal value is required\"})\r\n    }\r\n    if(!code){\r\n      return({isError: true, message: \"Deal code is required\"})\r\n    }\r\n    if(code && code.length > 10){\r\n      return({isError: true, message: \"Deal code length can not have more than 10 character\"})\r\n    }\r\n    if(!description){\r\n      return({isError: true, message: \"Description is required\"})\r\n    }\r\n    if(description && description.length > 100){\r\n      return({isError: true, message: \"Maximum limit of description is 250 character\"})\r\n    }\r\n    else {\r\n      return({isError: false, message: \"\"})\r\n    }\r\n  }\r\n  else {\r\n    if(!dealType){\r\n      return({isError: true, message: \"Deal Type is required\"})\r\n    }\r\n    if(!name){\r\n      return({isError: true, message: \"Name is required\"})\r\n    }\r\n    if(name && name.length > 30){\r\n      return({isError: true, message: \"Deal name length can not have more than 30 character\"})\r\n    }\r\n    if(!dealValue){\r\n      return({isError: true, message: \"Deal value is required\"})\r\n    }\r\n    if(!code){\r\n      return({isError: true, message: \"Deal code is required\"})\r\n    }\r\n    if(code && code.length > 10){\r\n      return({isError: true, message: \"Deal code length can not have more than 10 character\"})\r\n    }\r\n    if(!description){\r\n      return({isError: true, message: \"Description is required\"})\r\n    }\r\n    if(description && description.length > 100){\r\n      return({isError: true, message: \"Maximum limit of description is 100 character\"})\r\n    }\r\n    else {\r\n      return({isError: false, message: \"\"})\r\n    }\r\n  }\r\n};\r\n}\r\n\r\nexport default CommonHelper;\r\n","/Users/khali/Documents/git/TeacherPortal/src/redux/reducers/index.js",[],"/Users/khali/Documents/git/TeacherPortal/src/redux/saga/index.js",[],"/Users/khali/Documents/git/TeacherPortal/src/containers/Header.js",["98","99"],"import React from 'react'\r\n\r\nexport default function Header () {\r\n  return (\r\n    <nav className='navbar navbar-top navbar-expand navbar-dark bg-primary border-bottom'>\r\n      <div className='container-fluid'>\r\n        <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n          <form className='navbar-search navbar-search-light form-inline mr-sm-3' id='navbar-search-main'>\r\n            <div className='form-group mb-0'>\r\n              <div className='input-group input-group-alternative input-group-merge'>\r\n                {/* <div className='input-group-prepend'>\r\n                  <span className='input-group-text'><i className='fas fa-search' /></span>\r\n                </div> */}\r\n                {/* <input className='form-control' placeholder='Search' type='text' /> */}\r\n              </div>\r\n            </div>\r\n            <button type='button' className='close' data-action='search-close' data-target='#navbar-search-main' aria-label='Close'>\r\n              <span aria-hidden='true'>×</span>\r\n            </button>\r\n          </form>\r\n          <ul className='navbar-nav align-items-center  ml-md-auto '>\r\n            <li className='nav-item d-xl-none'>\r\n              <div className='pr-3 sidenav-toggler sidenav-toggler-dark' data-action='sidenav-pin' data-target='#sidenav-main'>\r\n                <div className='sidenav-toggler-inner'>\r\n                  <i className='sidenav-toggler-line' />\r\n                  <i className='sidenav-toggler-line' />\r\n                  <i className='sidenav-toggler-line' />\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <ul className='navbar-nav align-items-center  ml-auto ml-md-0 '>\r\n            <li className='nav-item dropdown'>\r\n              <a className='nav-link pr-0' href='#' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>\r\n                <div className='media align-items-center'>\r\n                  <span className='avatar avatar-sm rounded-circle'>\r\n                    <img alt='Image placeholder' src='../assets/img/team-4.jpg' />\r\n                  </span>\r\n                  <div className='media-body  ml-2  d-none d-lg-block'>\r\n                    <span className='mb-0 text-sm  font-weight-bold'>John Snow</span>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <div className='dropdown-menu  dropdown-menu-right '>\r\n                <a href='#!' className='dropdown-item'>\r\n                  <i className='ni ni-button-power' />\r\n                  <span>Logout</span>\r\n                </a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","/Users/khali/Documents/git/TeacherPortal/src/containers/Users.js",["100","101","102","103","104","105","106","107","108"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom'\r\n\r\nexport default function Users () {\r\n  return (\r\n    <div>\r\n      <div className='header bg-primary pb-6'>\r\n        <div className='container-fluid'>\r\n          <div className='header-body'>\r\n            <div className='row align-items-center py-4'>\r\n              <div className='col-lg-6 col-7'>\r\n                <h6 className='h2 text-white d-inline-block mb-0'>Users</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='container-fluid mt--6'>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <div className='card'>\r\n              <div className='card-header border-0'>\r\n                &nbsp;\r\n              </div>\r\n              <div className='table-responsive'>\r\n                <table className='table align-items-center table-flush'>\r\n                  <thead className='thead-light'>\r\n                    <tr>\r\n                      <th scope='col'>Sr.No</th>\r\n                      <th scope='col'>Name</th>\r\n                      <th scope='col'>Contact No</th>\r\n                      <th scope='col'>Email</th>\r\n                      <th scope='col'>Type</th>\r\n                      <th scope='col'>Block</th>\r\n                      <th scope='col'>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className='list'>\r\n                    <tr>\r\n                      <td>1</td>\r\n                      <td>Mikayla Ervin</td>\r\n                      <td>+16183209941</td>\r\n                      <td>hello@gmail.com</td>\r\n                      <td>User</td>\r\n                      <td>\r\n                        <label className='custom-toggle' htmlFor='hello'>\r\n                          <input type='checkbox' id='hello' checked />\r\n                          <span className='custom-toggle-slider rounded-circle' />\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <button className='btn btn-icon btn-success btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='ni ni-check-bold' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-primary btn-sm' type='button' data-toggle='modal' data-target='#exampleModal'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-edit' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-danger btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-trash' /></span>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2</td>\r\n                      <td>Mikayla Ervin</td>\r\n                      <td>+16183209941</td>\r\n                      <td>hello@gmail.com</td>\r\n                      <td>Lawyer</td>\r\n                      <td>\r\n                        <label className='custom-toggle' htmlFor='hello'>\r\n                          <input type='checkbox' id='hello' checked />\r\n                          <span className='custom-toggle-slider rounded-circle' />\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <button className='btn btn-icon btn-success btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='ni ni-check-bold' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-primary btn-sm' type='button' data-toggle='modal' data-target='#exampleModal'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-edit' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-danger btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-trash' /></span>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>3</td>\r\n                      <td>Mikayla Ervin</td>\r\n                      <td>+16183209941</td>\r\n                      <td>hello@gmail.com</td>\r\n                      <td>User</td>\r\n                      <td>\r\n                        <label className='custom-toggle' htmlFor='hello'>\r\n                          <input type='checkbox' id='hello' checked />\r\n                          <span className='custom-toggle-slider rounded-circle' />\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <button className='btn btn-icon btn-success btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='ni ni-check-bold' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-primary btn-sm' type='button' data-toggle='modal' data-target='#exampleModal'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-edit' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-danger btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-trash' /></span>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>4</td>\r\n                      <td>Mikayla Ervin</td>\r\n                      <td>+16183209941</td>\r\n                      <td>hello@gmail.com</td>\r\n                      <td>Lawyer</td>\r\n                      <td>\r\n                        <label className='custom-toggle' htmlFor='hello'>\r\n                          <input type='checkbox' id='hello' checked />\r\n                          <span className='custom-toggle-slider rounded-circle' />\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <button className='btn btn-icon btn-success btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='ni ni-check-bold' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-primary btn-sm' type='button' data-toggle='modal' data-target='#exampleModal'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-edit' /></span>\r\n                        </button>\r\n                        <button className='btn btn-icon btn-danger btn-sm' type='button'>\r\n                          <span className='btn-inner--icon'><i className='fas fa-trash' /></span>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className='card-footer py-4'>\r\n                <nav aria-label='...'>\r\n                  <ul className='pagination justify-content-end mb-0'>\r\n                    <li className='page-item disabled'>\r\n                      <a className='page-link' href='#' tabindex='-1'>\r\n                        <i className='fas fa-angle-left' />\r\n                        <span className='sr-only'>Previous</span>\r\n                      </a>\r\n                    </li>\r\n                    <li className='page-item active'>\r\n                      <a className='page-link' href='#'>1</a>\r\n                    </li>\r\n                    <li className='page-item'>\r\n                      <a className='page-link' href='#'>2 <span className='sr-only'>(current)</span></a>\r\n                    </li>\r\n                    <li className='page-item'><a className='page-link' href='#'>3</a></li>\r\n                    <li className='page-item'>\r\n                      <a className='page-link' href='#'>\r\n                        <i className='fas fa-angle-right' />\r\n                        <span className='sr-only'>Next</span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='modal fade' id='exampleModal' tabindex='-1' role='dialog' aria-labelledby='exampleModalLabel' aria-hidden='true'>\r\n          <div className='modal-dialog modal-dialog-centered' role='document'>\r\n            <div className='modal-content'>\r\n              <div className='modal-header'>\r\n                <h5 className='modal-title' id='exampleModalLabel'>Edit User</h5>\r\n                <button type='button' className='close' data-dismiss='modal' aria-label='Close'>\r\n                  <span aria-hidden='true'>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className='modal-body'>\r\n                <div className='row'>\r\n                  <div className='col'>\r\n                    <div class='form-group'>\r\n                      <label for='example-text-input' class='form-control-label'>Name</label>\r\n                      <input class='form-control' type='text' value='John Snow' id='example-text-input' />\r\n                    </div>\r\n                  </div>\r\n                  <div className='col'>\r\n                    <div class='form-group'>\r\n                      <label for='example-text-input2' class='form-control-label'>Contact no</label>\r\n                      <input class='form-control' type='text' value='John Snow' id='example-text-input2' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='col'>\r\n                    <div className='form-group'>\r\n                      <label for='example-text-input3' className='form-control-label'>Email</label>\r\n                      <input class='form-control' type='text' value='John Snow' id='example-text-input3' />\r\n                    </div>\r\n                  </div>\r\n                  <div className='col'>\r\n                    <div className='form-group'>\r\n                      <label for='example-text-input4' class='form-control-label'>User Type</label>\r\n                      <select className='form-control' id='example-text-input4'>\r\n                        <option>User</option>\r\n                        <option>Lawyer</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='col'>\r\n                    <div className='form-group'>\r\n                      <label className='form-control-label float-left mr-2'>Blocked/Unblocked</label>\r\n                      <label className='custom-toggle' htmlFor='hello'>\r\n                        <input type='checkbox' id='hello' checked />\r\n                        <span className='custom-toggle-slider rounded-circle' />\r\n                      </label>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='modal-footer'>\r\n                <button type='button' className='btn btn-secondary' data-dismiss='modal'>Close</button>\r\n                <button type='button' className='btn btn-primary'>Save changes</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <footer className='footer pt-0'>\r\n          <div className='row align-items-center justify-content-lg-between'>\r\n            <div className='col-lg-6'>\r\n              <div className='copyright text-center text-lg-left  text-muted mt-4 ml-4'>\r\n                &copy; 2020  LawRoom\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/Users/khali/Documents/git/TeacherPortal/src/containers/Sidebar.js",["109","110","111","112","113"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom'\r\nimport logo from \"../../src/logo.svg\";\r\n\r\nexport default function Sidebar () {\r\n  return (\r\n    <nav className='sidenav navbar navbar-vertical  fixed-left  navbar-expand-xs navbar-light bg-white' id='sidenav-main'>\r\n      <div className='scrollbar-inner'>\r\n        <div className='sidenav-header  align-items-center'>\r\n          <a className='navbar-brand' href='javascript:void(0)'>\r\n            <img sr={logo} className='navbar-brand-img' alt='Logo' />\r\n          </a>\r\n        </div>\r\n        <div className='navbar-inner'>\r\n          <div className='collapse navbar-collapse' id='sidenav-collapse-main'>\r\n            <ul className='navbar-nav'>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/'>\r\n                  <i className='ni ni-tv-2 text-primary' />\r\n                  <span className='nav-link-text'>ATTENDANCE</span>\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/syallbus'>\r\n                  <i className='ni ni-tv-2 text-primary' />\r\n                  <span className='nav-link-text'>SYALLBUS</span>\r\n                </Link>\r\n              </li>              \r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/assessment'>\r\n                  <i className='ni ni-tv-2 text-primary' />\r\n                  <span className='nav-link-text'>ASSESSMENT</span>\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/result'>\r\n                  <i className='ni ni-tv-2 text-primary' />\r\n                  <span className='nav-link-text'>RESULT</span>\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/question-bank'>\r\n                  <i className='ni ni-tv-2 text-primary' />\r\n                  <span className='nav-link-text'>QUESTION BANK</span>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","/Users/khali/Documents/git/TeacherPortal/src/containers/Dashboard.js",["114","115","116"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CommonHelper from \"../common/utils\";\r\n\r\nconst Helper = new CommonHelper();\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionListing: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  // componentWillReceiveProps(nextprops) {\r\n\r\n  // }\r\n\r\n  handleState = (key, value) => {\r\n    this.setState({\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  handleQuestionListingAPI = () => {\r\n    const { dispatch } = this.props;\r\n\r\n    const userDetails = Helper.getLoggedInUserData();\r\n    const HEADER = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"Bearer \" +\r\n        `${\r\n          userDetails &&\r\n          userDetails.data &&\r\n          userDetails.data.token &&\r\n          userDetails.data.token\r\n        }`,\r\n    };\r\n    dispatch({ type: \"QUESTION_LISTING\", payload: { HEADER } });\r\n  };\r\n\r\n  render() {\r\n    const { questionListing } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"header bg-primary pb-6\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"header-body\">\r\n              <div className=\"row align-items-center py-4\">\r\n                <div className=\"col-lg-6 col-7\">\r\n                  <h6 className=\"h2 text-white d-inline-block mb-0\">\r\n                    ATTENDANCE\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container-fluid mt--6\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header border-0\">\r\n                  <div className=\"row align-items-center\">\r\n                    <div className=\"col\">\r\n                      <h3 className=\"mb-0\">Details</h3>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <Link to=\"/add-new-treatment\">\r\n                        <button\r\n                          class=\"btn btn-primary float-right\"\r\n                          type=\"button\"\r\n                        >\r\n                          Add New\r\n                        </button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table align-items-center table-flush\">\r\n                    <thead className=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">S.No</th>\r\n                        <th scope=\"col\">Question</th>\r\n                        <th scope=\"col\">Marks</th>\r\n                        <th scope=\"col\" className=\"colWidth\">\r\n                          Type\r\n                        </th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {questionListing &&\r\n                        questionListing.length >= 1 &&\r\n                        questionListing.map((data, index) => {\r\n                          return (\r\n                            <tr>\r\n                              <th scope=\"row\">{index + 1}</th>\r\n\r\n                              <td>\r\n                                Lorem Ipsum is simply dummy text of the printing\r\n                                and typesetting industry...\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  className=\"btn btn-icon btn-primary btn-sm\"\r\n                                  type=\"button\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#exampleModal\"\r\n                                >\r\n                                  <span className=\"btn-inner--icon\">\r\n                                    <i className=\"fas fa-edit\" />\r\n                                  </span>\r\n                                </button>\r\n                                <button\r\n                                  className=\"btn btn-icon btn-danger btn-sm\"\r\n                                  type=\"button\"\r\n                                  onClick={() => {}}\r\n                                >\r\n                                  <span className=\"btn-inner--icon\">\r\n                                    <i className=\"fas fa-trash\" />\r\n                                  </span>\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <footer className=\"footer pt-0\">\r\n            <div className=\"row align-items-center justify-content-lg-between\">\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"copyright text-center text-lg-left  text-muted mt-4 ml-4\">\r\n                  &copy; 2021 Teacher Portal\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","/Users/khali/Documents/git/TeacherPortal/src/common/types.js",[],"/Users/khali/Documents/git/TeacherPortal/src/redux/reducers/login.js",[],"/Users/khali/Documents/git/TeacherPortal/src/redux/saga/login.js",[],"/Users/khali/Documents/git/TeacherPortal/src/redux/ApiCaller.js",["117"],"// @flow\r\nimport fetch from \"cross-fetch\";\r\nimport { checkStatus, parseJSON } from \"./responseHandler\";\r\n\r\nconst queryString = require(\"query-string\");\r\n\r\nconst headerData = {\r\n  \"content-type\": \"application/x-www-form-urlencoded\",\r\n};\r\n\r\nconst BodyConversion = (body: Object, header: Object) => {\r\n  if (header[\"content-type\"] === \"application/x-www-form-urlencoded\") {\r\n    return queryString.stringify(body);\r\n  }\r\n  if (header[\"content-type\"] === \"application/json\") {\r\n    return JSON.stringify(body);\r\n  }\r\n  return body;\r\n};\r\n\r\nconst API = \"http://localhost:8011\";\r\n\r\nexport default (\r\n  endpoint: string,\r\n  method: string,\r\n  body: Object,\r\n  header: Object = headerData,\r\n  hostName: string = \"http://localhost:8011\"\r\n) =>\r\n  fetch(`${API}${endpoint}`, {\r\n    headers: header,\r\n    method,\r\n    body: BodyConversion(body, header),\r\n  })\r\n    .then(checkStatus)\r\n    .then(parseJSON)\r\n    .catch((error) => {\r\n      return {\r\n        status: false,\r\n        message: \"Ooops network error! Check your net connection\",\r\n      };\r\n    });\r\n","/Users/khali/Documents/git/TeacherPortal/src/redux/responseHandler.js",[],{"ruleId":"118","severity":1,"message":"119","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":36,"column":1,"nodeType":"124","endLine":36,"endColumn":37},{"ruleId":"118","severity":1,"message":"125","line":3,"column":27,"nodeType":"120","messageId":"121","endLine":3,"endColumn":33},{"ruleId":"118","severity":1,"message":"126","line":3,"column":35,"nodeType":"120","messageId":"121","endLine":3,"endColumn":41},{"ruleId":"118","severity":1,"message":"127","line":3,"column":43,"nodeType":"120","messageId":"121","endLine":3,"endColumn":48},{"ruleId":"118","severity":1,"message":"128","line":3,"column":50,"nodeType":"120","messageId":"121","endLine":3,"endColumn":54},{"ruleId":"118","severity":1,"message":"129","line":24,"column":22,"nodeType":"120","messageId":"121","endLine":24,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":75,"column":19,"nodeType":"132","endLine":77,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":83,"column":19,"nodeType":"132","endLine":83,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":342,"column":17,"nodeType":"137","messageId":"138","endLine":342,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":342,"column":52,"nodeType":"137","messageId":"138","endLine":342,"endColumn":54},{"ruleId":"139","severity":1,"message":"140","line":34,"column":15,"nodeType":"132","endLine":34,"endColumn":133},{"ruleId":"141","severity":1,"message":"142","line":37,"column":21,"nodeType":"132","endLine":37,"endColumn":83},{"ruleId":"118","severity":1,"message":"125","line":3,"column":20,"nodeType":"120","messageId":"121","endLine":3,"endColumn":26},{"ruleId":"118","severity":1,"message":"126","line":4,"column":3,"nodeType":"120","messageId":"121","endLine":4,"endColumn":9},{"ruleId":"118","severity":1,"message":"127","line":5,"column":3,"nodeType":"120","messageId":"121","endLine":5,"endColumn":8},{"ruleId":"118","severity":1,"message":"128","line":6,"column":3,"nodeType":"120","messageId":"121","endLine":6,"endColumn":7},{"ruleId":"139","severity":1,"message":"140","line":148,"column":23,"nodeType":"132","endLine":148,"endColumn":71},{"ruleId":"139","severity":1,"message":"140","line":154,"column":23,"nodeType":"132","endLine":154,"endColumn":57},{"ruleId":"139","severity":1,"message":"140","line":157,"column":23,"nodeType":"132","endLine":157,"endColumn":57},{"ruleId":"139","severity":1,"message":"140","line":159,"column":47,"nodeType":"132","endLine":159,"endColumn":81},{"ruleId":"139","severity":1,"message":"140","line":161,"column":23,"nodeType":"132","endLine":161,"endColumn":57},{"ruleId":"118","severity":1,"message":"125","line":3,"column":20,"nodeType":"120","messageId":"121","endLine":3,"endColumn":26},{"ruleId":"118","severity":1,"message":"126","line":4,"column":3,"nodeType":"120","messageId":"121","endLine":4,"endColumn":9},{"ruleId":"118","severity":1,"message":"127","line":5,"column":3,"nodeType":"120","messageId":"121","endLine":5,"endColumn":8},{"ruleId":"139","severity":1,"message":"140","line":15,"column":11,"nodeType":"132","endLine":15,"endColumn":65},{"ruleId":"143","severity":1,"message":"144","line":15,"column":44,"nodeType":"145","messageId":"146","endLine":15,"endColumn":64},{"ruleId":"118","severity":1,"message":"125","line":2,"column":27,"nodeType":"120","messageId":"121","endLine":2,"endColumn":33},{"ruleId":"118","severity":1,"message":"126","line":2,"column":35,"nodeType":"120","messageId":"121","endLine":2,"endColumn":41},{"ruleId":"118","severity":1,"message":"127","line":2,"column":43,"nodeType":"120","messageId":"121","endLine":2,"endColumn":48},{"ruleId":"122","severity":1,"message":"147","line":23,"column":1,"nodeType":"124","endLine":42,"endColumn":8},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'message' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","Assign arrow function to a variable before exporting as module default"]